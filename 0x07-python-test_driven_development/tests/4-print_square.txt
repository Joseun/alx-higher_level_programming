===============================
 How to Use print_square.py
===============================

This library is very simple, since it only has one function called
``print_square()``.

Numbers
=======

``print_square()`` prints a square with the character #.

::

    >>> print_square = __import__('4-print_square').print_square
    >>> print_square(3)
    ###
    ###
    ###

It does not work with floating-point values and negative numbers.

::

    >>> print_square(3.56)
    Traceback (most recent call last):
    TypeError: size must be an integer

    >>> print_square(-3)
    Traceback (most recent call last):
    ValueError: size must be >= 0

Non-Numbers
===========

``print_square()`` raises a TypeError if the size is not an integer.

    >>> print_square("six")
    Traceback (most recent call last):
    TypeError: size must be an integer

    >>> print_square([1])
    Traceback (most recent call last):
    TypeError: size must be an integer
